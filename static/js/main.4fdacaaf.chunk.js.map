{"version":3,"sources":["sources/logo2.png","Context.js","components/accountMan/TextInput.js","components/accountMan/Login.js","components/accountMan/SignUp.js","components/pages/home/Home.js","components/layout/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Context","React","createContext","Provider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","inherits","createClass","key","value","react_default","a","createElement","props","children","Component","Consumer","TextInput","_ref","label","name","placeholder","type","onChange","error","className","htmlFor","classnames","is-invalid","Login","email","password","errors","e","setState","defineProperty","target","onSubmit","preventDefault","_this$state","errorsCopy","_this$state2","accountMan_TextInput","confEmail","confPassword","Home","Header","react_router_dom","to","src","logo","alt","style","height","margin","App","Context_Provider","react_router","exact","path","component","SignUp","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4fdacaaf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2.df7e812d.png\";","import React, { Component } from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport class Provider extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInput = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  error: PropTypes.string.isRequired\r\n};\r\n\r\nexport default TextInput;\r\n","import React, { Component } from \"react\";\r\nimport TextInput from \"./TextInput\";\r\n\r\nexport default class Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: {\r\n      email: \"\",\r\n      password: \"\"\r\n    }\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { email, password, errors } = this.state;\r\n\r\n    // ERROR CHECKING\r\n\r\n    if (email === \"\" || password === \"\") {\r\n      const errorsCopy = errors;\r\n      email === \"\"\r\n        ? (errorsCopy.email = \"Email is required...\")\r\n        : (errorsCopy.email = \"\");\r\n      password === \"\"\r\n        ? (errorsCopy.password = \"Password is required...\")\r\n        : (errorsCopy.password = \"\");\r\n      this.setState({\r\n        errors: errorsCopy\r\n      });\r\n    } else {\r\n      // LOG IN\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { email, password, errors } = this.state;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 mx-auto\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h1 className=\"card-title mb-4 mt-1 text-center pt-3 pb-4 text-primary\">\r\n                <i className=\"fas fa-lock\" /> Sign in\r\n              </h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <TextInput\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    placeholder=\"example@domain.com\"\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <TextInput\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    placeholder=\"******\"\r\n                    type=\"password\"\r\n                    onChange={this.onChange}\r\n                    error={errors.password}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <div className=\"checkbox\">\r\n                    <label>\r\n                      {\" \"}\r\n                      <input type=\"checkbox\" /> Save password{\" \"}\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                    {\" \"}\r\n                    Login{\" \"}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TextInput from \"./TextInput\";\r\n\r\nexport default class Login extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    confEmail: \"\",\r\n    password: \"\",\r\n    confPassword: \"\",\r\n    errors: {\r\n      name: \"\",\r\n      email: \"\",\r\n      confEmail: \"\",\r\n      password: \"\",\r\n      confPassword: \"\"\r\n    }\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const {\r\n      name,\r\n      email,\r\n      confEmail,\r\n      password,\r\n      confPassword,\r\n      errors\r\n    } = this.state;\r\n\r\n    // ERROR CHECKING\r\n\r\n    if (\r\n      name === \"\" ||\r\n      email === \"\" ||\r\n      password === \"\" ||\r\n      confEmail === \"\" ||\r\n      confPassword === \"\" ||\r\n      email !== confEmail ||\r\n      password !== confPassword\r\n    ) {\r\n      const errorsCopy = errors;\r\n      name === \"\"\r\n        ? (errorsCopy.name = \"Please enter your name...\")\r\n        : (errorsCopy.name = \"\");\r\n      password === \"\"\r\n        ? (errorsCopy.password = \"Please enter a new password...\")\r\n        : (errorsCopy.password = \"\");\r\n      confPassword === \"\"\r\n        ? (errorsCopy.confPassword = \"Please confirm your new password...\")\r\n        : password !== confPassword\r\n        ? (errorsCopy.confPassword = \"Your password must match...\")\r\n        : (errorsCopy.confPassword = \"\");\r\n      email === \"\"\r\n        ? (errorsCopy.email = \"Please enter your E-maIl...\")\r\n        : (errorsCopy.email = \"\");\r\n      confEmail === \"\"\r\n        ? (errorsCopy.confEmail = \"Please confirm your E-mail...\")\r\n        : email !== confEmail\r\n        ? (errorsCopy.confEmail = \"Your E-mail must match...\")\r\n        : (errorsCopy.confEmail = \"\");\r\n      this.setState({\r\n        errors: errorsCopy\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      email,\r\n      password,\r\n      errors,\r\n      confEmail,\r\n      confPassword,\r\n      name\r\n    } = this.state;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 mx-auto\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h1 className=\"card-title mb-4 mt-1 text-center pt-3 pb-4 text-primary\">\r\n                <i className=\"fas fa-lock\" /> Sign Up\r\n              </h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <TextInput\r\n                    label=\"Your Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"name\"\r\n                    type=\"text\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <TextInput\r\n                    label=\"Your E-mail\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    placeholder=\"example@domain.com\"\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <TextInput\r\n                    label=\"Confirm E-mail\"\r\n                    name=\"confEmail\"\r\n                    value={confEmail}\r\n                    placeholder=\"example@domain.com\"\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.confEmail}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <TextInput\r\n                    label=\"New Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    placeholder=\"******\"\r\n                    type=\"password\"\r\n                    onChange={this.onChange}\r\n                    error={errors.password}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <TextInput\r\n                    label=\"Confirm Password\"\r\n                    name=\"confPassword\"\r\n                    value={confPassword}\r\n                    placeholder=\"******\"\r\n                    type=\"password\"\r\n                    onChange={this.onChange}\r\n                    error={errors.confPassword}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                    {\" \"}\r\n                    Sign up{\" \"}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Hello</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../sources/logo2.png\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0\">\r\n        <div className=\"container\">\r\n          <Link to=\"/home\" className=\"navbar-brand\">\r\n            <img\r\n              src={logo}\r\n              alt=\"logo\"\r\n              style={{ height: \"50px\", margin: \"5px\" }}\r\n            />\r\n          </Link>\r\n          <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/home\" className=\"nav-link\">\r\n                  <i className=\"fas fa-home\" />\r\n                  {\"  \"}\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/about\" className=\"nav-link\">\r\n                  <i className=\"fas fa-question\" />\r\n                  {\"  \"}\r\n                  About us\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/contactus\" className=\"nav-link\">\r\n                  <i className=\"fas fa-headset\" />\r\n                  {\"  \"}\r\n                  Contact us\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/login\" className=\"nav-link\">\r\n                  <i className=\"fas fa-sign-in-alt\" />\r\n                  {\"  \"}\r\n                  Sign in\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/signup\" className=\"nav-link\">\r\n                  <i className=\"fas fa-user-plus\" />\r\n                  {\"  \"}\r\n                  Sign up\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Provider } from \"./Context\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./components/accountMan/Login\";\r\nimport SignUp from \"./components/accountMan/SignUp\";\r\nimport Home from \"./components/pages/home/Home\";\r\nimport Header from \"./components/layout/Header\";\r\n\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header />\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path=\"/home\" component={Home} />\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path=\"/signup\" component={SignUp} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}